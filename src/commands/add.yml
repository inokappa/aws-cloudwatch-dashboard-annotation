description: >
  This command will add annotations to the metrics in the CloudWatch Dashboard.
parameters:
  dashboard_title:
    type: string
    default: "Sample Dashboard"
    description: "Specify the dashboard title."
  widget_title:
    type: string
    default: "Sample Metrics"
    description: "Specify the widget title."
  widget_titles:
    type: string
    default: "Sample Widget"
    description: >
      Specify the widget titles.
      If you want to specify multiple widgets, you need to separate them with commas.
  label:
    type: string
    default: "Deploy Finished."
    description: "Specify the annotation's label."
  deploy_finished_datetime:
    type: string
    default: ""
    description: "Specify the deploy finished datetime."
  display_diff:
    type: string
    default: "no"
    description: "Displays the difference between annotations."

steps:
  - aws-cli/install
  - jq/install
  - run:
      name: Add a deployment completion annotation.
      command: |
        DASHBOARD_TITLE="<< parameters.dashboard_title >>"
        WIDGET_TITLES="<< parameters.widget_titles >>"
        ## WIDGET_TITLE="<< parameters.widget_titles >>"
        LABEL="<< parameters.label >>"
        #
        AWS_COMMAND="$(which aws)"
        if [ -n "${AWS_ENDPOINT}" ];then
          AWS_COMMAND="aws --endpoint ${AWS_ENDPOINT}"
        fi
        DASHBOARD_EXISTS=$(${AWS_COMMAND} cloudwatch list-dashboards \
          | jq ".DashboardEntries[]|select(.DashboardName == \"${DASHBOARD_TITLE}\")")
        if [ -z "${DASHBOARD_EXISTS}" ];then
          echo "Dashboard: ${DASHBOARD_TITLE} does not exists."
          exit 0
        fi
        DEPLOY_FINISHED_DATETIME="<< parameters.deploy_finished_datetime >>"
        if [ -z "${DEPLOY_FINISHED_DATETIME}" ];then
          DEPLOY_FINISHED_DATETIME=$(date -u '+%Y-%m-%dT%H:%M:%S.000Z')
        fi
        DASHBOARD_BODY=$(${AWS_COMMAND} cloudwatch get-dashboard \
          --dashboard-name "${DASHBOARD_TITLE}" | jq -r .DashboardBody)
        #
        update_dashboard_body=""
        loop_count=0
        OLD_IFS=${IFS}; IFS=","
        for widget_title in ${WIDGET_TITLES}
        do
          echo "-------------------------------------------------"
          echo ${widget_title}
          echo ${loop_count}
          echo "-------------------------------------------------"
          if [ "${loop_count}" = "0" ];then
            update_dashboard_body=$(echo "${DASHBOARD_BODY}" \
              | jq -c "(.widgets[]|select(.properties.title == \"${widget_title}\").properties.annotations.vertical) += [{ \"label\": \"${LABEL}\", \"value\": \"${DEPLOY_FINISHED_DATETIME}\" }]")
          fi
          update_dashboard_body=$(echo "${UPDATE_DASHBOARD_BODY}" \
            | jq -c "(.widgets[]|select(.properties.title == \"${widget_title}\").properties.annotations.vertical) += [{ \"label\": \"${LABEL}\", \"value\": \"${DEPLOY_FINISHED_DATETIME}\" }]")
          loop_count=$(expr $loop_count + 1)
          echo ${loop_count}
        done
        IFS=${OLD_IFS}
        #
        DISPLAY_DIFF=<< parameters.display_diff >>
        if [ "${DISPLAY_DIFF}" != "no" ];then
          diff -u <(echo ${DASHBOARD_BODY} | jq .) <(echo ${update_dashboard_body} | jq .) || true
        fi
        ${AWS_COMMAND} cloudwatch put-dashboard \
          --dashboard-name "${DASHBOARD_TITLE}" \
          --dashboard-body "$(echo ${update_dashboard_body})"
