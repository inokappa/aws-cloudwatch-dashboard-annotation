version: 2.1

orbs:
  aws-cloudwatch-dashboard-annotation: inokappa/aws-cloudwatch-dashboard-annotation@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

executors:
  integration-test:
    docker:
      - image: cimg/python:3.9
        environment:
          AWS_ACCESS_KEY_ID: EXAMPLEKEY123
          AWS_SECRET_ACCESS_KEY: EXAMPLESECRET123456
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ENDPOINT: http://moto-server:5000
          AWS_DISABLE_SSL: true
      - image: motoserver/moto
        name: moto-server
        command: ["cloudwatch", "-H", "0.0.0.0"]

commands:
  install-awscli:
    steps:
      - run:
          name: Install awscli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
              unzip awscliv2.zip && \
              sudo ./aws/install

  add-dashboard:
    steps:
      - run:
          name: Add Dashboard for intergration test.
          command: |
            aws --endpoint ${AWS_ENDPOINT} cloudwatch put-dashboard \
              --dashboard-name "My Dashboard" \
              --dashboard-body '{"widgets":[{"type":"metric","x":0,"y":90,"width":24,"height":6,"properties":{"view":"timeSeries","stacked":false,"metrics":[["AWS/ApplicationELB","RequestCount","LoadBalancer","app/sample1/1234567890"]],"region":"ap-northeast-1","title":"My Metrics1"}},{"type":"metric","x":0,"y":90,"width":24,"height":6,"properties":{"view":"timeSeries","stacked":false,"metrics":[["AWS/ApplicationELB","RequestCount","LoadBalancer","app/sample2/1234567890"]],"region":"ap-northeast-1","title":"My Metrics2"}}]}'

  check-annotation-on-dashboard:
    steps:
      - run:
          name: Check the annotations in the dashboard.
          command: |
            COUNT=$(aws --endpoint ${AWS_ENDPOINT} cloudwatch get-dashboard --dashboard-name "${DASHBOARD_TITLE}" \
                      | jq -r .DashboardBody \
                      | jq '.widgets[]|select(.properties.title == "My Metrics2").properties.annotations.vertical|length')
            if [ -z $COUNT ];then
              exit 1
            fi

jobs:
  integration-test-1:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - install-awscli
      - add-dashboard
      - run:
          name: Your Deploy Action
          command: |
            echo "Your Deploy Action"
            echo "export DEPLOY_FINISHED_DATETIME=$(date -u '+%Y-%m-%dT%H:%M:%S%z')" >> $BASH_ENV
      - aws-cloudwatch-dashboard-annotation/add:
          dashboard_title: "My Dashboard"
          widget_title: "My Metrics2"
          display_diff: "yes"
          deploy_finished_datetime: ${DEPLOY_FINISHED_DATETIME}
      - check-annotation-on-dashboard

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint # Lint Yaml files
      - orb-tools/pack # Pack orb source
      - shellcheck/check:
          dir: ./src/scripts
          exclude: SC2148
      - bats/run:
          path: ./src/tests
      - hold-for-dev-publish:
          type: approval
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - bats/run
            - shellcheck/check
      - orb-tools/publish-dev:
          orb-name: inokappa/aws-cloudwatch-dashboard-annotation
          context: orb-publishing # A restricted context containing your private publishing credentials. Will only execute if approved by an authorized user.
          requires: [hold-for-dev-publish]
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test-1
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: inokappa/aws-cloudwatch-dashboard-annotation
          context: orb-publishing
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - integration-test-1
          filters:
            branches:
              only:
                - master
                - main
